// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clientes {
  id         String   @id @default(uuid())
  name       String
  cpf        String   @unique
  telefone   String
  cidade     String
  estado     String
  logradouro String
  nascimento String
  createdAt  DateTime @default(now())
  ativo      Boolean  @default(true)
  password   String
  email      String   @unique

  role          Role            @default(USER)
  Agendamentos  Agendamentos[]
  ResetPassword ResetPassword[]
}

model Cortes {
  id           String         @id @default(uuid())
  name         String
  time         String         @default("60")
  valor        String
  Agendamentos Agendamentos[]
}

model Agendamentos {
  id          String   @id @default(uuid())
  corte       Cortes   @relation(fields: [corteId], references: [id])
  corteId     String
  cliente     Clientes @relation(fields: [clienteId], references: [id])
  clienteId   String
  date        DateTime
  hora_inicio String
  hora_fim    String
  valor       String
  createdAt   DateTime @default(now())
}

model Fornecedor {
  id          String   @id @default(uuid())
  nome        String
  tipo_pessoa String
  cnpj        String   @unique
  cpf         String
  telefone    String
  email       String
  ativo       Boolean
  createdAt   DateTime @default(now())
  Compras     Compras? @relation(fields: [comprasId], references: [id])
  comprasId   String?
}

model Compras {
  id             String       @id @default(uuid())
  estoqueId      String
  estoque        Estoque[]
  valor_unitario String
  valor_total    String
  quantidade     String
  fornecedorId   String
  fornecedor     Fornecedor[]
  createdAt      DateTime     @default(now())
}

model Estoque {
  id           String   @id @default(uuid())
  nome_produto String
  preco_venda  String
  createdAt    DateTime @default(now())
  quantidade   String
  ativo        Boolean
  Compras      Compras? @relation(fields: [comprasId], references: [id])
  comprasId    String?
}

model Vendas {
  id            String   @id @default(uuid())
  agendamentoId String?
  estoqueId     String?
  clienteId     String?
  createdAt     DateTime @default(now())
  total         String
  comprovante   String?
}

model Caixa {
  id        String   @id @default(uuid())
  vendaId   String
  valor     String
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model ResetPassword {
  id        String   @id @default(uuid())
  cliente   Clientes @relation(fields: [clienteId], references: [id])
  clienteId String   @unique
  recovery  String
  createdAt DateTime @default(now())
}
